# include <iostream>
# include <cmath>
using namespace std;

/*
// 14.1 Даны целые положительные числа A и B (A < B). Вывести все целые числа от A до B включительно; при этом каждое число должно выводиться столько раз, каково его значение (например, число 3 выводится 3 раза).
int main()
{
	int A, B, i, j;
	cout << "Write A and B (A<B) ";
	cin >> A >> B;
	if (A < 0 || B < 0 || A > B) {
		cout << "A or B < 0 or A > B";
		return 0;
	}
	for (i = A; i <= B; i++) {
		j = 0;
		while (j < i)
		{
			cout << i << " ";
			j++;
		}
		cout << endl;
	}
}
*/

/*
//14.2 Даны положительные числа A и B (A > B). На отрезке длины A размещено максимально возможное количество отрезков длины B (без наложений). Не используя операции умножения и деления, найти длину незанятой части отрезка A.
int main()
{
	int A, B, i, j;
	cout << "Write A and B (A>B) ";
	cin >> A >> B;
	if (A < 0 || B < 0 || A < B) {
		cout << "A or B < 0 or A < B";
		return 0;
	}
	while (A + 1 > B)
	{
		A -= B;
	}
	cout << "The length of the unoccupied part of the segment A = " << A << endl;
}
*/

/*
//14.3 Дано целое число N (> 1). Вывести наименьшее из целых чисел K, для которых сумма 1 + 2 + . . . + K будет больше или равна N, и саму эту сумму.
int main()
{
	int n, k, i;
	cout << "Write N (>1) ";
	cin >> n;
	if (n < 0) {
		cout << "N < 0";
		return 0;
	}
	k = 0;
	for (i = 1; k < n; i++)
	{
		k += i;
	}
	cout << i-1 << endl;
}
*/

/*
//14.4 Начальный вклад в банке равен 1000 руб. Через каждый месяц размер вклада увеличивается на P процентов от имеющейся суммы (P — вещественное число, 0 < P < 25). По данному P определить, через сколько месяцев размер вклада превысит 1100 руб., и вывести найденное количество месяцев K (целое число) и итоговый размер вклада S (вещественное число).
int main()
{
	float p, s;
	int m = 0;
	cout << "Write P % (0 < P < 25) ";
	cin >> p;
	if (0 > p || p > 25) {
		cout << "P must be - 0 < P < 25 ";
		return 0;
	}
	s = 1000;
	while (s <= 1100) {
		s += s * p/100;
		m++;
	}
	cout << "The number of months the deposit amount will exceed 1100 rubles = " << m << "; The total amount of the deposit = " << s << " rubles" << endl;
}
*/

/*
//14.5 Даны целые положительные числа A и B. Найти их наибольший общий делитель (НОД), используя алгоритм Евклида
int main()
{
	int A, B, n;
	cout << "Write A and B ";
	cin >> A >> B;
	if (A < 0 || B < 0) {
		cout << "A or B < 0";
		return 0;
	}
	while (B != 0) {
		n = B;
		B = A % B;
		A = n;
	}
	cout << "NOD = " << n << endl;
}
*/

/*
//14.6 Дано целое число N (> 1), являющееся числом Фибоначчи: N = FK. Найти целое число K — порядковый номер числа Фибоначчи N.
int main()
{
	int N,k,i,z;
	cout << "Write N (> 1; N = FK) ";
	cin >> N;
	if (0 > N) {
		cout << "N  1 ";
		return 0;
	}
	k = 0;
	i = 1;
	z = 1;
	while (k < N)
	{
		k += i;
		i = k - i;
		z++;
	}
	cout << "K = " << z << endl;
	}
	*/

